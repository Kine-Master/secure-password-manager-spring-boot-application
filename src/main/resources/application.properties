spring.application.name=secure-password-manager-app


# --- 1. Server Configuration ---
server.port=8080

# --- 2. Spring Security OAuth 2.0 Client Configuration (Google IdP) ---
# This configures our app to act as an OAuth 2.0 client for Google.
# Client ID and Secret are loaded from the .env file for security.
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/oauth2/callback/{registrationId}
# Scopes define the user information our app requests from Google.
spring.security.oauth2.client.registration.google.scope=openid,profile,email
# Issuer URI for Google's OpenID Connect provider for auto-discovery of endpoints.
spring.security.oauth2.client.provider.google.issuer-uri=https://accounts.google.com

# --- 3. Custom JWT Configuration ---
# These are custom properties specific to our application's JWT generation and validation.
# The secret key is crucial for JWT signing and must be loaded from the .env file.
application.security.jwt.secret=${JWT_SECRET}
application.security.jwt.expiration=3600000
application.security.jwt.refresh-token.expiration=604800000

# --- 4. H2 Database Configuration (File-Based for Persistence) ---
# Enables the H2 web console for inspecting the database during development.
spring.h2.console.enabled=true
# Sets the URL path for the H2 console. Access at http://localhost:8080/h2-console
spring.h2.console.path=/h2-console
# Configures the H2 database to store its data in a file.
# './data/secure_password_manager_db' means the database file will be in a 'data' folder
# relative to your project's root directory.
# 'DB_CLOSE_ON_EXIT=FALSE' ensures the database file is not deleted when the app stops.
spring.datasource.url=jdbc:h2:file:./data/secure_password_manager_db;DB_CLOSE_ON_EXIT=FALSE

#   CHANGEABLE INE
app.admin.username=admin@admin.com
app.admin.password=1234567890
app.admin.fullname=System Administrator
app.admin.email=admin@admin.com
spring.datasource.driverClassName=org.h2.Driver
#   CHANGEABLE INE

# Default username and password for H2. Keep these for development.
spring.datasource.username=sa
spring.datasource.password=

# --- 5. JPA/Hibernate Configuration (for H2) ---
# Specifies the SQL dialect for H2 database, optimizing Hibernate's SQL generation.
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# 'update' tells Hibernate to update the database schema based on your JPA entities.
# Use 'create' to drop and recreate the schema on every app start (fresh database).
# In production, this should typically be 'none' or 'validate' with schema migrations.
spring.jpa.hibernate.ddl-auto=update
# Logs all SQL queries executed by Hibernate to the console (very useful for debugging).
spring.jpa.show-sql=true
# Formats the SQL queries in the logs for better readability.
spring.jpa.properties.hibernate.format_sql=true

# --- 6. Distributed Tracing (Micrometer Tracing & Zipkin) ---
# Base URL for the Zipkin server where trace data will be sent.
# Ensure a Zipkin server is running (e.g., via Docker) at this address.
spring.zipkin.base-url=http://localhost:9411

# --- 7. Spring Boot Actuator and Metrics Configuration ---
# Exposes various Actuator endpoints over HTTP for monitoring and management.
# You can access these at http://localhost:8080/actuator/<endpoint_name>
management.endpoints.web.exposure.include=health,info,metrics,prometheus,httptrace,beans,env
# Enables Micrometer Tracing functionality.
management.tracing.enabled=false
# Adds a global tag 'application' to all metrics, useful for filtering in monitoring tools.
management.metrics.tags.application=secure-password-manager-app

# Frontend redirect URL after successful OAuth2 login
application.oauth2.authorized-redirect-uri=http://localhost:5173/#/oauth2/redirect

encryption.secret-key=${ENCRYPTION_SECRET_KEY}
encryption.salt=${ENCRYPTION_SALT}

logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE